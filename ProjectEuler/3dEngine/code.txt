   rot3d←{
     p←⍵               ⍝ (p)oint being rotated
     rx ry rz←○⍺÷180   ⍝ axis (r)otations in radians
     t←0.000001        ⍝ (t)hreshold for rounding errors
     sin←1∘○ ⍝ Trig Aliases
     cos←2∘○
     ⍝ (R)otation Matrix for (x) axis
     Rx←3 3⍴(1 0 0 0,(cos rx),(-sin rx),0,(sin rx),(cos rx))
     ⍝ (R)otation Matrix for (y) axis
     Ry←3 3⍴((cos ry),0,(sin ry),0 1 0,(-sin ry),0,(cos ry))
     ⍝ (R)otation Matrix for (z) axis
     Rz←3 3⍴((cos rz),(-sin rz),0,(sin rz),(cos rz),0 0 0 1)
     o←Rz+.×Ry+.×Rx+.×p ⍝ (o)utput point
     ⌊@(t>⊢)o    ⍝ clean up rounding errors
 }

  proj3d←{
     n f l r t b←⍺ ⍝ extents (n)ear (f)ar (l)eft (r)ight (t)op (b)ottom
     m1←(2×n÷r-l),0,(r(+÷-)l),0
     m2←0,(2×n÷t-b),(t(+÷-)b),0
     m3←0,0,(-f(+÷-)n),(-2×f(×÷-)n)
     m4←0 0 ¯1 0
     M←4 4⍴m1,m2,m3,m4

     v4←M+.×⍵,1

     2↑v4
 }

 drawing←{
     p3d←((2 2 6)(2 6 2)(2 6 6)(6 2 2)(6 2 6)(6 6 2)(6 6 6)(2 2 2))
     f←(⊂1.8 6.2(⍵+¯0.43)(⍵+0.43)(⍵+0.27)(⍵+¯0.27))
     p←↑f∘.proj3d p3d
     ⍺.f←'F'⎕WC'Form' '3D Cube'(5 5)(90 90)
     ⍺.p←'F.C'⎕WC'Circle'(p+200)((⊃⍴p)⍴2)('Coord' 'Pixel')

     rotate←{
         _←⎕DL÷30
         new_p3d←(⊂0 5 0)∘.rot3d ⍵
         p←↑f∘.proj3d new_p3d
         ⍺.p←'F.C'⎕WC'Circle'(p+400)((⊃⍴p)⍴2)('Coord' 'Pixel')
         new_p3d
     }

     {}⍺ rotate⍣300⊢p3d
 }

 (⎕ns'')∘drawing 2