/*
Problem 9
    A Pythagorean triplet is a set of three natural numbers, a < b < c, for which,

    a^2 + b^2 = c^2
    For example, 32 + 42 = 9 + 16 = 25 = 52.

    There exists exactly one Pythagorean triplet for which a + b + c = 1000.
    Find the product abc.

*/

//Code
{⍺←3 ⋄ ⍺=⌈3÷⍨⍵-3:⍺ ⋄ a←⍺ ⋄ _←(⍺+1){⍺=(⍵-1+a):⍺ ⋄ b←⍺ ⋄ c←⍵-a+b ⋄ (c×c)=(a×a)+(b×b):a b c ⋄(⍺+1)∇ ⍵}⍵ ⋄ 3=≢_:×/_ ⋄ (⍺+1)∇ ⍵}1000


/* Explanation:
This uses two recursive functions to iterate a from 3 to 333, b from a+1 to 
{⍺←3 ⋄         // Initialize ⍺ to 3
⍺=⌈3÷⍨⍵-3:⍺ ⋄ // Stops execution if ⍺ reaches 333
a←⍺ ⋄          // Stores ⍺ as a to allow inner loop access to the value
    
    _←(⍺+1)         // Inner recursive function begins, _ captures result of function, may return either scalar, indicating failure to find a triple, or a vector of length 3, the triple desired
    {⍺=(⍵-1+a):⍺ ⋄ // If ⍺ reaches limit, halt and return ⍺
     b←⍺ ⋄ 
     c←⍵-a+b ⋄ 
     (c×c)=(a×a)+(b×b):a b c ⋄ // if a^2 + b^2 = c^2, then return a b c
     (⍺+1)∇ ⍵}                // Iterates ⍺ by 1 every execution
     ⍵ ⋄ 
3=≢_:×/_ ⋄       // If _ is not a scalar, but a length 3 vector, then we have found our triple, then find the product of the elements in the vector
(⍺+1)∇ ⍵}       // Iterates ⍺ by 1 every execution
1000

*/