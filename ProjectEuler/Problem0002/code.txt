/*
Problem 2:
	Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

	1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

	By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

//Code:
{⍺←0 1 ⋄ ⌈/⍺>⍵:+/⍺/⍨0=2|⍺ ⋄ ⍵∇⍨⍺,+/¯2↑⍺}4000000


/*
Explanation:
{⍺←0 1 ⋄ // Initalize ⍺ to the first two terms of the Fibonacci sequence
⌈/⍺>⍵:  // When the largest term of the sequence exceeds ⍵,
+/⍺/⍨0=2|⍺ ⋄ // return the sum of the even valued terms
⍵∇⍨⍺,+/¯2↑⍺} // Otherwise recursively generate the sequence by appending the sum of the last two terms.
4000000
*/