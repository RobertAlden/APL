∇  tris←l cube r
 ;p ⍝ (p)oints
 ;F;B;L;R;U;D ⍝ Each describes a face, (F)ront, (B)ack, (L)eft...
 p←(⊂r)∘.+↓⍉(2⊥⍣¯1⊢)1-⍨⍳8 ⍝ Generates the vertices
 F←(⊂5 1 7 3)⌷p
 B←(⊂2 6 4 8)⌷p
 L←(⊂1 2 3 4)⌷p
 R←(⊂6 5 8 7)⌷p
 U←(⊂7 3 8 4)⌷p
 D←(⊂1 5 2 6)⌷p
 tris←l×10×¯0.5+,↑{(⊂3↑⍵),(⊂1↓⍵)}¨F B L R U D
 ∇

 ∇ out←l rot3d r;p;rx;ry;rz;t;sin;cos;Rx;Ry;Rz;offset
 p←r               ⍝ (p)oint being rotated
 rx ry rz←○l÷180   ⍝ axis (r)otations in radians
 t←0.000001        ⍝ (t)hreshold for rounding errors
 sin←1∘○ ⍝ Trig Aliases
 cos←2∘○
⍝ (R)otation Matrix for (x) axis
 Rx←3 3⍴(1 0 0 0,(cos rx),(-sin rx),0,(sin rx),(cos rx))
⍝ (R)otation Matrix for (y) axis
 Ry←3 3⍴((cos ry),0,(sin ry),0 1 0,(-sin ry),0,(cos ry))
⍝ (R)otation Matrix for (z) axis
 Rz←3 3⍴((cos rz),(-sin rz),0,(sin rz),(cos rz),0 0 0 1)
 offset←{(+/÷≢),↑⍵}p ⍝ calculates center of points given
 out←{offset+{Rz+.×Ry+.×Rx+.×⍵}¨⍵-offset}¨p ⍝ (o)utput point
 ∇

 ∇  res←l proj3d r;fov;asp;zn;zf;M;temp
 fov asp zn zf←l ⍝ extents (n)ear (f)ar (l)eft (r)ight (t)op (b)ottom
 M←4 4⍴0
 M[1;1]←asp×(÷3○fov÷2)
 M[2;2]←÷3○fov÷2
 M[3;3]←zf÷zf-zn
 M[3;4]←zf((-×⊢)÷-)zn
 M[4;3]←1
 res←sf×1000×{{{¯1↓⍵÷¯1↑⍵}M+.×⍵,1}¨⍵}¨r
 ∇

∇ out←t trans3d r
 out←{(⊂t)∘.+⍵}¨r
 ∇

∇ l move r
 tris←(⍎l)trans3d tris
∇

∇  l turn r
 tris←(5×⍎l)rot3d tris
∇

∇  l initG r;temp;len
 temp←{⍉2↑⍉↑⍵}¨r ⍝ Drops the z component and prepares for batch line drawing
 l ⎕WC'Poly'temp('FStyle'((≢temp)⍴0))('FillCol'cols)
∇

∇  l updateG r;temp;len;g
 g←⊂{⍋∊{(+/÷≢)¯1↑¨⍵}¨⍵}r ⍝ sorts by z component (painters algorithm)
 temp←⌊⍤1¨{⍉2↑⍉↑⍵}¨{g⌷⍵}r ⍝ Drops the z component and prepares for batch line drawing
⍝l ⎕WS('Points'(temp))
 l ⎕WC'Poly'temp('FStyle'((≢temp)⍴0))('FillCol'(g⌷cols))
∇

∇ update;S;t;map;pixels;colors
 count+←1
 'F.Bitmap'⎕WS('CBits'((⌈sf×scr_w scr_h)⍴(0 0 0)))
 'F.Bitmap.Cube'updateG(sf×scr_w÷2)(sf×scr_h÷2)50 trans3d f proj3d((360|2×count) 15 0)rot3d tris
∇

∇ tris←l icos r;r1;r2;r3;phi;ind;vt;acc
 phi←1.902
 r1←(0 1 phi)(0 ¯1 phi)(0 1(-phi))(0 ¯1(-phi))
 r2←{¯1⌽⍵}¨r1
 r3←{¯1⌽⍵}¨r2
 ⎕←vt←3 4⍴r1,r2,r3
⍝  tris←{(⊂r)∘.+⍵}¨(⊂r2[3],r1[2],r1[1]),(⊂r2[1],r1[2],r1[1])
 acc←(⊂vt[2;1],vt[1;2],vt[1;1]),(⊂vt[2;3],vt[1;2],vt[1;1])
 acc,←(⊂vt[3;1],vt[2;2],vt[2;1]),(⊂vt[3;3],vt[2;2],vt[2;1])
 acc,←(⊂vt[1;1],vt[3;2],vt[3;1]),(⊂vt[1;3],vt[3;2],vt[3;1])
 acc,←(⊂vt[2;2],vt[1;3],vt[1;4]),(⊂vt[2;4],vt[1;3],vt[1;4])
 acc,←(⊂vt[3;2],vt[2;3],vt[2;4]),(⊂vt[3;4],vt[2;3],vt[2;4])
 acc,←(⊂vt[1;2],vt[3;3],vt[3;4]),(⊂vt[1;4],vt[3;3],vt[3;4])
 tris←{(⊂r)∘.+⍵}¨acc
 ∇

∇main;scr_x;scr_y;scr_w;scr_h;f;p;count;tris;cols;sf
 scr_x scr_y←100 100
 scr_w scr_h←1024 1024
 sf←÷2
 count←0
 f←(90(scr_w÷scr_h)0.1 1000)
 'F'⎕WC'Form' '3D Cube'(scr_x scr_y)(scr_w scr_h)('Coord' 'Pixel')('OnTop' 1)
 'F.Bitmap'⎕WC'Bitmap'('CBits'((⌈sf×scr_w scr_h)⍴(0 0 0)))
 'F'⎕WS('Picture' 'F.Bitmap' 2)
 tris←(1 cube 0 1 5),(1 cube 0 ¯1 5)
 cols←?(≢tris)⍴(⊂3⍴255)
 'F.T'⎕WC'Timer'('Interval' 16)('Active' 1)('Timer' 'update')
 ⎕DQ'F'
∇
main